
MSAPROBS is a new and practial protein multiple sequence alignment
algorithm based on pair hidden markov model and partition function
posterrior probabilities. Assessed on BAliBASE 3.0, PREFAB 4.0,
SABMARK 1.65, and OXBENCH, MSAProbs achieves the statistically 
highest alignment accuracy, compared to ClustalW 2.0.10, MAFFT 6.717(
using L-INS-i with --maxiterate = 1000), MUSCLE 3.8.31, ProbCons 1.12,
and Probalign 1.3. (current version 0.9.3, March 17, 2010).


To use this software, please cite the following paper:
/******************************************************
Yongchao Liu, Bertil Schmidt, Douglas L. Maskell:

"MSAProbs: multiple sequence alignment based on 
pair hidden Markov models and partition function posterior probabilities",

Bioinformatics 2010, 26(16): 1958-1964

*******************************************************/

This software is developed by Liu Yongchao, School of Computer Engineering,
Nanyang Technological University. If any comments or problems, 
please directly contact Liu Yongchao using either of the following email 
addresses: liuy0039@ntu.edu.sg; nkcslyc@hotmail.com.

MSAPROBS is an open-source software, complying with General Public 
Licence (GPL) version 3.0. MSAPROBS is distributed WITHOUT WARRANTY, express or
implied. The authors accept NO LEGAL LIABILITY OR  RESPONSIBILITY  for
loss due to reliance on the program.

(1) Linux and Windows are supported, with a Makefile and a Visual Studio 2005
project co-existing in the source code tarball.

Change to sub-directory MSAProbs, the Makefile file for Linux can be found.

(2)The default compiling options enable OpenMP support to fully utlized the 
compute capability of multi-core CPUs, as multi-core CPUs have been commonplace.

Typical Usage:
 (1) "./msaprobs -help" or "./msaprobs -?"
			Get the command line options

 (2) "./msaprobs infile >outfile" or "./msaprobs infile -o outfile"
			The alignments are printed out into file "outfile" in FASTA format

 (3) ./msaprobs infile -o outfile -num_threads 4
			Use four threads to accelerate the execution
