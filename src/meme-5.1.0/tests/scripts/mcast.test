# Test mcast (basic)
&test('mcast1', '',
  'mcast', '',
  ['-oc', 'results/mcast1', 'meme/meme.lex0.zoops.txt', 'common/lex0.s'],
  [
    {
      output => 'results/mcast1/mcast.tsv', 
      reference => 'mcast/lex0.zoops.tsv', 
      type => 'text', ignore => ['^#']
    },
    {
      output => 'results/mcast1/mcast.gff', 
      reference => 'mcast/lex0.zoops.gff', 
      type => 'text', ignore => ['^#']
    },
    {
      output => 'results/mcast1/mcast.xml', 
      reference => 'mcast/lex0.zoops.xml', 
      type => 'xml', ignore => [
        '^mcast@(release|version)$',
        '^mcast:command-line#value$'
      ]
    },
    {
      output => 'results/mcast1/cisml.xml', 
      reference => 'mcast/lex0.zoops.cisml', 
      type => 'xml', ignore => []
    },
    {
      output => 'results/mcast1/mcast.html', 
      reference => 'mcast/lex0.zoops.html', 
      type => 'json', ignore => [
        'data:(version|revision|release|cmd|runtime)',
      ]
    }
  ],
  'results/mcast1'
);

&test('mcast2', '',
  'mcast', '',
  ['-oc', 'results/mcast2', '-parse-genomic-coord', 
    'fimo/GCN4.meme.txt', 'fimo/GCN4_YPD-genomic.fasta'],
  [
    {
      output => 'results/mcast2/mcast.tsv', 
      reference => 'mcast/parse_genomic.tsv', 
      type => 'text', ignore => ['^#']
    },
    {
      output => 'results/mcast2/mcast.gff', 
      reference => 'mcast/parse_genomic.gff', 
      type => 'text', ignore => ['^#']
    },
    {
      output => 'results/mcast2/mcast.xml', 
      reference => 'mcast/parse_genomic.xml', 
      type => 'xml', ignore => [
        '^mcast@(release|version)$',
        '^mcast:command-line#value$'
      ]
    },
    {
      output => 'results/mcast2/cisml.xml', 
      reference => 'mcast/parse_genomic.cisml', 
      type => 'xml', ignore => []
    },
    {
      output => 'results/mcast2/mcast.html', 
      reference => 'mcast/parse_genomic.html', 
      type => 'json', ignore => [
        'data:(version|revision|release|cmd|runtime)',
      ]
    }
  ],
  'results/mcast2'
);
